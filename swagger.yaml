openapi: 3.0.0
info:
  title: Bundle API
  description: API suite for interacting with entities associated with the Selective Deployment of assets from a source domain to a target domain
  version: 0.1.0

paths:
  /solutions:
    get:
      tags:
        - Solutions
      summary: Reads all solutions
      description: Returns a list of all solutions, including related applications and templates
      parameters:
        - $ref: '#/components/parameters/EnabledQueryParam'
        - $ref: '#/components/parameters/DivisionIdQueryParam'
      responses:
        '200':
          $ref: '#/components/responses/SolutionsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          description: Internal server error
    post:
      tags:
        - Solutions
      summary: Creates a new solution
      description: Creates a new solution from the provided data. Applications are added in a separate call. Returns the full solution object created
      requestBody:
        $ref: '#/components/requestBodies/SolutionRequest'
      responses:
        '201':
          allOf:
            - $ref: '#/components/responses/SolutionResponse'
            - description: The solution object created
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          description: Internal server error
  /solutions/{solutionUid}:
    get:
      tags:
        - Solutions
      summary: Returns a single solution
      description: Returns the solution represented by the given ID
      parameters:
        - $ref: '#/components/parameters/SolutionUidPathParam'
      responses:
        '200':
          $ref: '#/components/responses/SolutionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    put:
      tags:
        - Solutions
      summary: Updates a solution
      description: Replaces the existing solution represented by the ID with the new data
      parameters:
        - $ref: '#/components/parameters/SolutionUidPathParam'
      requestBody:
        $ref: '#/components/requestBodies/SolutionRequest'
      responses:
        '200':
          $ref: '#/components/responses/SolutionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    delete:
      tags:
        - Solutions
      summary: Deletes a solution
      description: Soft-deletes the solution specified by the given ID, and soft-cascade-deletes any applications and templates associated with it. A solution with existing implementations cannot be deleted. 
      parameters:
        - $ref: '#/components/parameters/SolutionUidPathParam'
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /solutions/{solutionUid}/version_labels:
    get:
      tags:
        - Solutions
      summary: Reads all available version labels for a solution's applications
      description: A collection of application version labels to choose from when versioning applications is maintained for each solution. This will return all the available version labels for the specified solution.
      parameters:
        - $ref: '#/components/parameters/SolutionUidPathParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    versionName:
                      type: string
                    nickname:
                      type: string
                    notes:
                      type: string
                    order:
                      type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    post:
      tags:
        - Solutions
      summary: Creates a new version label to be used for a solution's applications
      parameters:
        - $ref: '#/components/parameters/SolutionUidPathParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                versionName:
                  type: string
      responses:
        '201':
          description: Created
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /version_labels/{versionLabelId}:
    put:
      tags:
        - Solutions
      summary: Updates an existing version label
      parameters:
        - $ref: '#/components/parameters/VersionLabelIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                versionName:
                  type: string
      responses:
        '200':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    delete:
      tags:
        - Solutions
      summary: Deletes a version label
      parameters:
        - $ref: '#/components/parameters/VersionLabelIdPathParam'
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /solutions/{solutionUid}/applications:
    get:
      tags:
        - Applications
      summary: Reads all applications for a solution
      description: Returns a list of all applications associated with the specified solution, including template data
      parameters:
        - $ref: '#/components/parameters/SolutionUidPathParam'
        - $ref: '#/components/parameters/EnabledQueryParam'
      responses:
        '200':
          $ref: '#/components/responses/ApplicationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    post:
      tags:
        - Applications
      summary: Adds an application to a solution
      description: Creates a new application associated with the solution represented by `solutionId`. 
      parameters:
        - $ref: '#/components/parameters/SolutionUidPathParam'
      requestBody:
        $ref: '#/components/requestBodies/ApplicationRequest'
      responses:
        '201':
          $ref: '#/components/responses/ApplicationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /applications/{applicationUid}:
    get:
      tags:
        - Applications
      summary: Returns the details of a single application
      description: Retrieves version and related template data for the application represented by `applicationId`
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
      responses:
        '200':
          $ref: '#/components/responses/ApplicationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    put:
      tags:
        - Applications
      summary: Updates a single application
      description: Replaces the application data with the data supplied in the request. Can only be used to edit data at the application level.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                shortCode:
                  type: string
                enabled:
                  type: boolean
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
      responses:
        '200':
          $ref: '#/components/responses/ApplicationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    delete:
      tags:
        - Applications
      summary: Deletes a single application
      description: Soft-deletes the application specified by `applicationId`, and soft-cascade-deletes any versions or templates associated with it. An application with existing implementations cannot be deleted.
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /applications/{applicationUid}/versions:
    get:
      tags:
        - Applications
      summary: Reads all versions of a single application
      description: Returns a list of detail objects for all versions of an application, including data regarding the templates associated with each version
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
      responses:
        '200':
          description: A response object representing a list of application versions, including associated templates
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        applicationName:
                          type: string
                    - $ref: '#/components/schemas/ApplicationVersion'
                    - $ref: '#/components/schemas/Metadata'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    post:
      tags:
        - Applications
      summary: Creates a new version of a single application
      description: Accepts an object representing a new version of the application represented by `applicationId`, including the templates associated with the version
      requestBody:
        description: A request object representing the new application version, including templates
        content:
          application/json:
            schema:
              type: object
              properties:
                versionId:
                  type: integer
                enabled:
                  type: boolean
                isDefaultVersion:
                  type: boolean
                sourceDomainCname:
                  type: string
                templates:
                  type: array
                  items:
                    type: object
                    properties:
                      sourceViewUid:
                        type: string
                        pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                      sourceDomainCname:
                        type: string
                      cadence:
                        type: string
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
      responses:
        '201':
          description: A response object representing the application version created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApplicationVersion'
                  - $ref: '#/components/schemas/Metadata'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /applications/{applicationUid}/versions/{versionId}:
    get:
      tags:
        - Applications
      summary: Reads a single version of the specified application
      description: Returns the details of the version specified by `versionKey`, which is unique for a single application. Includes templates associated with the application version
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
        - $ref: '#/components/parameters/VersionIdPathParam'
      responses:
        '200':
          description: A response object representing a single version of an application, including templates
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      applicationName:
                        type: string
                  - $ref: '#/components/schemas/ApplicationVersion'
                  - $ref: '#/components/schemas/Metadata'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    put:
      tags:
        - Applications
      summary: Updates a single version of an application
      description: For the application represented by `applicationId` and the version represented by `versionKey`, this endpoint replaces the application version data with the provided data. This can only be used to edit data at the application version level
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                versionId:
                  type: integer
                enabled:
                  type: boolean
                isDefaultVersion:
                  type: boolean
                sourceDomainCname:
                  type: string
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
        - $ref: '#/components/parameters/VersionIdPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      applicationName:
                        type: string
                  - $ref: '#/components/schemas/ApplicationVersion'
                  - $ref: '#/components/schemas/Metadata'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    delete:
      tags:
        - Applications
      summary: Deletes a single version of an application
      description: For the application represented by `applicationId`, soft-deletes the version represented by `versionKey`, and soft-cascade-deletes any associated templates. This operation is not permitted if there are existing implementations of the application version.
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
        - $ref: '#/components/parameters/VersionIdPathParam'
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /applications/{applicationUid}/versions/{versionId}/templates:
    get:
      tags:
        - Templates
      summary: Returns all templates associated with a single version of an application
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
        - $ref: '#/components/parameters/VersionIdPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    post:
      tags:
        - Templates
      summary: Adds a template to a version of an application
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
        - $ref: '#/components/parameters/VersionIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceDomainCname:
                  type: string
                sourceViewUid:
                  type: string
                  pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                cadence:
                  type: string
      responses:
        '201':
          description: A response object representing the created template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /applications/{applicationUid}/versions/{versionId}/templates/{templateId}:
    delete:
      tags:
        - Templates
      summary: Deletes a single template from an application version
      description: A template described an existing asset on a source domain. This endpoint will remove the specified template from the application version. This is not permitted if there are implementations of this application version
      parameters:
        - $ref: '#/components/parameters/ApplicationUidPathParam'
        - $ref: '#/components/parameters/VersionIdPathParam'
        - $ref: '#/components/parameters/TemplateIdPathParam'
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /solution_implementations:
    get:
      tags:
        - Implementations
      summary: Lists all implementations
      responses:
        '200':
          $ref: '#/components/responses/SolutionImplementationsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    post:
      tags:
        - Implementations
      summary: Creates a new implementation of a solution, along with related application and template implementations.
      requestBody:
        description: >
          `solutionUid` selects the solution to deploy. `targetDomainCnames` selects the domains to which the assets will be deployed. `applicationVersions` must be an array of application version IDs, which should include no more than one application version for each application in the solution. If any application in the solution is excluded from this list, that application will not be implemented.
        content:
          application/json:
            schema:
              type: object
              properties:
                solutionUid:
                  type: string
                  pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                targetDomainCnames:
                  type: array
                  items:
                    type: string
                applicationVersions:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          $ref: '#/components/responses/SolutionImplementationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /solution_implementations/{implementationId}:
    get:
      tags:
        - Implementations
      summary: Reads a single implementation
      description: Retrieves data regarding the implementation of a solution, including which application versions are included and what the status of each template implementation is
      parameters:
        - $ref: '#/components/parameters/ImplementationIdPathParam'
      responses:
        '200':
          $ref: '#/components/responses/SolutionImplementationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
    delete:
      tags:
        - Implementations
      summary: Deletes an implementation stack
      description: Deletes a solution implementation, along with associated application implementations and template implementations. Can only be performed if any assets deployed for the associated template implementations have been deleted from the target domain. The latter can be performed with the `/solutionImplementations/{implementationId}/cleanup` endpoint
      parameters:
        - $ref: '#/components/parameters/ImplementationIdPathParam'
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /solution_implementations/{implementationId}/templates:
    get:
      tags:
        - Implementations
      summary: Reads all templates that are to be deployed by a solution implementation
      parameters:
        - $ref: '#/components/parameters/ImplementationIdPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    templateId:
                      type: integer
                    sourceDomainCname:
                      type: string
                    sourceAssetUid:
                      type: string
                      pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                    targetDomainCname:
                      type: string
                    targetAssetUid:
                      type: string
                      pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                    status:
                      type: string
                      enum: [DEPLOYMENT_REQUESTED, DEPLOYMENT_PENDING, SUCCEEDED, FAILED]
                    statusReason:
                      type: string
                  $ref: '#/components/schemas/Template'
  /solution_implementations/{implementationId}/cleanup:
    post:
      tags:
        - Implementations
      summary: Removes deployed assets associated with an implementation
      description: For the implementation represented by `implementationId`, deletes deployed assets from the target domain
      parameters:
        - $ref: '#/components/parameters/ImplementationIdPathParam'
      responses:
        '204':
          description: Success
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error
  /next_template_implementation:
    get:
      tags:
        - Implementations
      summary: Returns a single template implementation to deploy
      description: This endpoint will select a template implementation in the `DEPLOYMENT_REQUESTED` state, move it to the `PENDING` state with a TTL, and return the template implementation details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateImplementation'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          description: Internal server error

components:
  schemas:
    Solution:
      type: object
      properties:
        name:
          type: string
        uid:
          type: string
          pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
        division_id:
          type: integer
        enabled:
          type: boolean
    Application:
      type: object
      properties:
        name:
          type: string
        uid:
          type: string
          pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
        shortCode:
          type: string
        enabled:
          type: boolean
    ApplicationVersion:
      type: object
      properties:
        versionId:
          type: string
        versionName:
          type: string
        versionNickname:
          type: string
        versionNotes:
          type: string
        versionOrder:
          type: integer
        enabled:
          type: boolean
        isDefaultVersion:
          type: boolean
        sourceDomainCname:
          type: string
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    Template:
      type: object
      properties:
        templateId:
          type: integer
        sourceDomainCname:
          type: string
        sourceViewUid:
          type: string
          pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
        cadence:
          type: string
    Metadata:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/MetadataUser'
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/MetadataUser'
        deletedAt:
          type: string
          format: date-time
        deletedBy:
          $ref: '#/components/schemas/MetadataUser'
    MetadataUser:
      type: object
      properties:
        uid:
          type: string
          pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
        displayName:
          type: string
    TemplateImplementation:
      type: object
      properties:
        templateImplementationId: 
          type: integer
        sourceDomainCname:
          type: string
        sourceAssetUid:
          type: string
          pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
        targetDomainCname:
          type: string
        status:
          type: string
          enum: [deployment_requested, deployment_pending, succeeded, failed]
          example: pending
  parameters:
    SolutionUidPathParam:    
      name: solutionUid
      in: path
      description: Solution UID
      required: true
      schema:
        type: string
        pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
    ApplicationUidPathParam:
      name: applicationUid
      in: path
      description: Application UID
      required: true
      schema:
        type: string
        pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
    TemplateIdPathParam:
      name: templateId
      in: path
      description: Template ID
      required: true
      schema:
        type: integer
    VersionIdPathParam:
      name: versionId
      in: path
      description: Version ID (unique for a single application)
      required: true
      schema:
        type: string
    ImplementationIdPathParam:
      name: implementationId
      in: path
      description: Implementation ID
      required: true
      schema:
        type: integer
    EnabledQueryParam:
      name: enabled
      in: query
      description: Enabled filter
      required: false
      schema:
        type: boolean
        example: true
    DivisionIdQueryParam:
      name: divisionId
      in: query
      description: Division ID filter
      required: false
      schema:
        type: integer
    VersionLabelIdPathParam:
      name: versionLabelId
      in: path
      description: Version Label ID
      required: true
      schema:
        type: integer
  requestBodies:
    SolutionRequest:
      description: An object representing the solution to be created.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Solution'
    ApplicationRequest:
      description: An object representing the application to be created.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              shortCode:
                type: string
  responses:
    UnauthorizedResponse:
      description: Unauthorized– Invalid credentials
    ForbiddenResponse:
      description: Forbidden– User does not have sufficient permissions
    NotFoundResponse:
      description: Not Found
    SolutionResponse:
      description: An response object describing a single solution, including data regarding applications and templates
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Solution'
              - type: object
                properties:
                  applications:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Application'
                        - type: object
                          properties:
                            versions:
                              type: array
                              items:
                                allOf:
                                  - $ref: '#/components/schemas/ApplicationVersion'
                                  - $ref: '#/components/schemas/Metadata'
                        - $ref: '#/components/schemas/Metadata'
              - $ref: '#/components/schemas/Metadata'
    SolutionsResponse:
      description: A response object describing a list of solutions, including data regarding applications and templates
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Solution'
                - type: object
                  properties:
                    applications:
                      type: array
                      items:
                        allOf:
                          - $ref: '#/components/schemas/Application'
                          - type: object
                            properties:
                              versions:
                                type: array
                                items:
                                  allOf:
                                    - $ref: '#/components/schemas/ApplicationVersion'
                                    - $ref: '#/components/schemas/Metadata'
                          - $ref: '#/components/schemas/Metadata'
                - $ref: '#/components/schemas/Metadata'
    ApplicationResponse:
      description: A response object describing a single application, including data regarding versions and templates
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Application'
              - type: object
                properties:
                  solutionName:
                    type: string
                  versions:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/ApplicationVersion'
                        - $ref: '#/components/schemas/Metadata'
              - $ref: '#/components/schemas/Metadata'
    ApplicationsResponse:
      description: A response object describing a list of applications, including data regarding versions and templates
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Application'
                - type: object
                  properties:
                    solutionName:
                      type: string
                    versions:
                      type: array
                      items:
                        allOf:
                          - $ref: '#/components/schemas/ApplicationVersion'
                          - $ref: '#/components/schemas/Metadata'
                - $ref: '#/components/schemas/Metadata'
    SolutionImplementationsResponse:
      description: A response object representing a list of solution implementations
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                solutionUid:
                  type: string
                  pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                solutionName:
                  type: string
                targetDomainCname:
                  type: string
                status:
                  type: string
                  enum: [REQUESTED, PENDING, SUCCEEDED, FAILED]
                applicationImplementations:
                  type: array
                  items:
                    type: object
                    properties:
                      applicationUid:
                        type: string
                        pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                      applicationName:
                        type: string
                      shortCode:
                        type: string
                      versionId:
                        type: integer
                      versionName:
                        type: string
                      versionNickname:
                        type: string
                      versionNotes:
                        type: string
                      versionOrder:
                        type: integer
                      sourceDomainCname:
                        type: string
                      templateImplementations:
                        type: array
                        items:
                          type: object
                          properties:
                            templateId:
                              type: integer
                            sourceDomainCname:
                              type: string
                            sourceAssetUid:
                              type: string
                              pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                            targetDomainCname:
                              type: string
                            targetAssetUid:
                              type: string
                              pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                            status:
                              type: string
                              enum: [DEPLOYMENT_REQUESTED, DEPLOYMENT_PENDING, SUCCEEDED, FAILED]
                            statusReason:
                              type: string
    SolutionImplementationResponse:
      description: A response object representing a single solution implementation
      content:
        application/json:
          schema:
            type: object
            properties:
              solutionUid:
                type: string
                pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
              solutionName:
                type: string
              targetDomainCname:
                type: string
              status:
                type: string
                enum: [REQUESTED, PENDING, SUCCEEDED, FAILED]
              applicationImplementations:
                type: array
                items:
                  type: object
                  properties:
                    applicationUid:
                      type: string
                      pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                    applicationName:
                      type: string
                    shortCode:
                      type: string
                    versionId:
                      type: integer
                    versionName:
                      type: string
                    sourceDomainCname:
                      type: string
                    templateImplementations:
                      type: array
                      items:
                        type: object
                        properties:
                          templateId:
                            type: integer
                          sourceDomainCname:
                            type: string
                          sourceAssetUid:
                            type: string
                            pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                          targetDomainCname:
                            type: string
                          targetAssetUid:
                            type: string
                            pattern: '^[a-z0-9]{4}-[a-z0-9]{4}$'
                          status:
                            type: string
                            enum: [DEPLOYMENT_REQUESTED, DEPLOYMENT_PENDING, SUCCEEDED, FAILED]
                          statusReason:
                            type: string
    GetImplementationResponse:
      description: A response object representing the implementation of a solution on a target domain, including deployed application versions and templates
      content:
        application/json:
          schema:
            type: object
            properties:
              targetDomainId:
                type: integer
              targetDomainCName:
                type: string
              solutionId:
                type: integer
              solutionName:
                type: string
              applications:
                type: array
                items:
                  type: object
                  properties:
                    applicationId:
                      type: integer
                    applicationName:
                      type: string
                    applicationShortCode:
                      type: string
                    applicationVersionKey:
                      type: string
                    applicationVersionName:
                      type: string
                    applicationSourceDomainId:
                      type: integer
                    applicationSourceDomainCName:
                      type: string
                    status:
                      type: string
                      enum: [active, inactive]
                    templates:
                      type: array
                      items:
                        type: object
                        properties:
                          sourceAssetUid:
                            type: string
                          sourceAssetName:
                            type: string
                          sourceDomainCname:
                            type: string
                          sourceDomainCName:
                            type: string
                          targetAssetUid:
                            type: string
                          status:
                            type: string
                            enum: [requested, pending, completed, failed]
                          statusReason:
                            type: string
